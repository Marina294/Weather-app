{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","context/WeatherProvider.js","App.js","index.js"],"names":["Titles","className","Form","props","type","name","placeholder","value","cityName","onChange","e","onChangeCityName","target","onClick","onSubmit","Weather","city","country","icon","src","alt","temperature","feelsLike","humidity","winds","initialState","weather","main","temp","wind","speed","sys","error","reducer","state","action","payload","WeatherState","createContext","undefined","WeatherDispatch","WeatherProvider","children","useReducer","dispatch","Provider","useWeatherState","context","useContext","Error","useWeatherDispatch","ErrorModal","WeatherDisplay","useState","changingWeather","setChangingWeather","useEffect","a","url","axios","get","response","data","fetchWeather","description","feels_like","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d77d153.chunk.js","sourcesContent":["import React from 'react';\n\nconst Titles = () => {\n  return (\n    <div className='title'>\n      <h2>Check The Current Weather</h2>\n    </div>\n  )\n}\n\nexport default Titles;","import React from 'react'\n// import React, {useState} from 'react';\n// import \"./form.css\";\n\nconst Form = props => {\n\n  return (\n    <div className='container'>\n      <div className='row search-section'>\n          <input \n            className='search-input'\n            type='text' \n            name='city' \n            placeholder='City...' \n            value={props.cityName}\n            onChange={(e)=>{props.onChangeCityName(e.target.value)}}\n          />\n          {/* <input\n            type='text'\n            name=\"country\" \n            placeholder=\"Country...\" \n            value='Canada' \n            value={props.countryName}\n            onChange={(e)=>{props.onChangeCountryName(e.target.value)}}\n          /> */}\n          <button className='search-btn' onClick={props.onSubmit}>\n            check it!\n            </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Form;\n\n","import React from 'react'\n\n\nconst Weather = props => {\n\n  return (\n    <div className='weather-section'>\n      <h3>{props.city}, {props.country}</h3>\n      {/* <h3>{props.city}</h3>\n      <h4>{props.country}</h4> */}\n      <div>\n        {\n          props.icon && (\n            <img className='weather-img' src={`https://openweathermap.org/img/w/${props.icon}.png`} alt='' />\n          )\n        }\n      </div>\n      <div className='weather-temp'><h1>{props.temperature} <span>°c</span></h1></div> \n      <div className='weather-detail'>\n      <p>\n        Feels Like {props.feelsLike} °c<br />\n        Humidity {props.humidity} %<br />\n        Wind {props.winds} km/h<br />\n      </p>\n      </div>\n    </div>\n  )\n};\n\nexport default Weather;\n\n\n","import React, { createContext, useReducer, useContext } from \"react\";\n\nconst initialState = {\n  weather: {\n\t\tmain: { temp: null },\n\t\twind: { speed: null },\n\t\tsys: { country: null },\n\t\tweather: [ {icon: \"\"} ]\n\t},\n  cityName: \"Vancouver\",\n//   countryName: \"Canada\",\n\terror: null\n}\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"SET_WEATHER\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tweather: action.payload\n\t\t\t};\n    case \"SET_CITY_NAME\":\n      return {\n        ...state,\n        cityName: action.payload\n      };\n    // case \"SET_COUNTRY_NAME\":\n    //   return {\n    //     ...state,\n    //     countryName: action.payload\n    //   };\n\t\tcase \"ERROR\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst WeatherState = createContext(undefined);\nconst WeatherDispatch = createContext(undefined);\n\nconst WeatherProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\n\treturn (\n\t\t<WeatherState.Provider value={state}>\n\t\t\t<WeatherDispatch.Provider value={dispatch}>{children}</WeatherDispatch.Provider>\n\t\t</WeatherState.Provider>\n\t);\n};\n\nconst useWeatherState = () => {\n\tconst context = useContext(WeatherState);\n\tif (undefined === context) {\n\t\tthrow new Error(\"Please use within WeatherStateProvider\");\n\t}\n\treturn context;\n};\n\nconst useWeatherDispatch = () => {\n\tconst context = useContext(WeatherDispatch);\n\tif (undefined === context) {\n\t\tthrow new Error(\"Please use within WeatherDispatchProvider\");\n\t}\n\treturn context;\n};\n\nexport { WeatherProvider, useWeatherState, useWeatherDispatch };\n","import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nimport Titles from \"./components/Titles\"\nimport Form from \"./components/Form\"\nimport Weather from \"./components/Weather\"\nimport \"./App.css\";\n\nimport { WeatherProvider, useWeatherDispatch, useWeatherState } from './context/WeatherProvider'\n\nconst ErrorModal = () => {\n  const { error } = useWeatherState();\n  const dispatch = useWeatherDispatch();\n\n  const closeModal = () => dispatch({ type: \"ERROR\", payload: null })\n\n  if(!error) return null\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal-content\">\n        <p>{error}</p>\n        <button onClick={closeModal}>Ok</button>\n      </div>\n    </div>\n  )\n}\n\nconst WeatherDisplay = () => {\n  const [changingWeather, setChangingWeather] = useState(true)\n  // const { weather, cityName, countryName } = useWeatherState();\n  const { weather, cityName } = useWeatherState();\n  const dispatch = useWeatherDispatch();\n\n  const changeWeather = () => setChangingWeather(true)\n\n  // const changeCountry = () => dispatch({ type: \"CHANGE_WEATHER\", payload: { cityName, countryName } })\n\n  const changeCity = city => dispatch({ type: \"SET_CITY_NAME\", payload: city })\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setChangingWeather(false)\n      try {\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=a69f91a75eaef12893f8ceb6edd05841&units=metric`\n        const response = await axios.get(url);\n  \n        dispatch({ type: \"SET_WEATHER\", payload: response.data })\n      } catch (error) {\n        dispatch({ type: \"ERROR\", payload: \"Error: This city is unavailable in our system\" })\n      }\n    }\n\n    if(changingWeather) fetchWeather()\n  }, [changingWeather, cityName, dispatch, weather])\n\n  if(!weather) {\n    return <h1>Loading.....</h1>\n  }\n\n  return (\n    <div className=\"wrap\">\n      <Titles />\n      <Form \n        cityName={cityName} \n        // countryName={countryName} \n        onSubmit={changeWeather} \n        onChangeCityName={changeCity} \n        // onChangeCountryName={changeCountry} \n      />\n      <Weather \n        city={cityName}\n        country={weather.sys.country}\n        icon={weather.weather[0].icon}\n        description={weather.weather[0].description}\n        temperature={weather.main.temp}\n        feelsLike={weather.main.feels_like}\n        humidity={weather.main.humidity}\n        winds={weather.wind.speed}\n      />\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <WeatherProvider>\n      <ErrorModal />\n      <WeatherDisplay />\n    </WeatherProvider>\n  )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport \"./App.css\";\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}